..\test: ['..\\test', 'app.Flask']
app.Flask: ['app.Flask']
..\test.index: ['jinja2.Template', '..\\test.index']
jinja2.Template: ['jinja2.Template']
flask: ['flask']
flask.__getattr__: ['warnings.warn', 'flask.__getattr__', '<builtin>.AttributeError']
warnings.warn: ['warnings.warn']
<builtin>.AttributeError: ['<builtin>.AttributeError']
flask.json: ['flask.json']
flask.json.dumps: ['json.dumps', 'flask.json.dumps', 'globals.current_app.json.dumps']
globals.current_app.json.dumps: ['globals.current_app.json.dumps']
json.dumps: ['json.dumps']
flask.json.dump: ['flask.json.dump', 'json.dump', 'globals.current_app.json.dump']
globals.current_app.json.dump: ['globals.current_app.json.dump']
json.dump: ['json.dump']
flask.json.loads: ['json.loads', 'flask.json.loads', 'globals.current_app.json.loads']
globals.current_app.json.loads: ['globals.current_app.json.loads']
json.loads: ['json.loads']
flask.json.load: ['json.load', 'flask.json.load', 'globals.current_app.json.load']
globals.current_app.json.load: ['globals.current_app.json.load']
json.load: ['json.load']
flask.json.jsonify: ['globals.current_app.json.response', 'flask.json.jsonify']
globals.current_app.json.response: ['globals.current_app.json.response']
flask.globals: ['werkzeug.local.LocalProxy', 'contextvars.ContextVar', 'flask.globals']
contextvars.ContextVar: ['contextvars.ContextVar']
werkzeug.local.LocalProxy: ['werkzeug.local.LocalProxy']
flask.app: ['typing.TypeVar', 'flask.app']
typing.TypeVar: ['typing.TypeVar']
flask.app._make_timedelta: ['datetime.timedelta', '<builtin>.isinstance', 'flask.app._make_timedelta']
<builtin>.isinstance: ['<builtin>.isinstance']
datetime.timedelta: ['datetime.timedelta']
flask.app.Flask: ['flask.app.Flask', 'datetime.timedelta', 'werkzeug.datastructures.ImmutableDict', 'sessions.SecureCookieSessionInterface']
werkzeug.datastructures.ImmutableDict: ['werkzeug.datastructures.ImmutableDict']
sessions.SecureCookieSessionInterface: ['sessions.SecureCookieSessionInterface']
flask.app.Flask.__init__: ['sansio.app.App.add_url_rule', '<builtin>.bool', 'weakref.ref', 'flask.app.Flask.__init__', '<builtin>.super']
<builtin>.super: ['<builtin>.super']
<builtin>.bool: ['<builtin>.bool']
weakref.ref: ['weakref.ref']
flask.app.Flask.__init__.<lambda1>: ['flask.app.Flask.__init__.<lambda1>']
sansio.app.App.add_url_rule: ['sansio.app.App.add_url_rule']
flask.app.Flask.get_send_file_max_age: ['<builtin>.isinstance', 'flask.app.Flask.get_send_file_max_age', '<builtin>.int']
<builtin>.int: ['<builtin>.int']
flask.app.Flask.send_static_file: ['typing.cast', '<builtin>.isinstance', '<builtin>.RuntimeError', 'flask.app.Flask.get_send_file_max_age', 'flask.app.Flask.send_static_file', 'helpers.send_from_directory', '<builtin>.int']
<builtin>.RuntimeError: ['<builtin>.RuntimeError']
typing.cast: ['typing.cast']
helpers.send_from_directory: ['helpers.send_from_directory']
flask.app.Flask.open_resource: ['flask.app.Flask.open_resource', 'os.path.join', '<builtin>.ValueError', '<builtin>.open']
<builtin>.ValueError: ['<builtin>.ValueError']
os.path.join: ['os.path.join']
<builtin>.open: ['<builtin>.open']
flask.app.Flask.open_instance_resource: ['os.path.join', '<builtin>.open', 'flask.app.Flask.open_instance_resource']
flask.app.Flask.create_jinja_environment: ['sansio.app.App.jinja_environment', '<builtin>.dict', 'flask.app.Flask.create_jinja_environment']
<builtin>.dict: ['<builtin>.dict']
sansio.app.App.jinja_environment: ['sansio.app.App.jinja_environment']
flask.app.Flask.create_url_adapter: ['flask.app.Flask.create_url_adapter', 'sansio.app.App.url_map.bind', 'sansio.app.App.url_map.bind_to_environ']
sansio.app.App.url_map.bind_to_environ: ['sansio.app.App.url_map.bind_to_environ']
sansio.app.App.url_map.bind: ['sansio.app.App.url_map.bind']
flask.app.Flask.raise_routing_exception: ['debughelpers.FormDataRoutingRedirect', '<builtin>.isinstance', 'flask.app.Flask.raise_routing_exception']
debughelpers.FormDataRoutingRedirect: ['debughelpers.FormDataRoutingRedirect']
flask.app.Flask.update_template_context: ['asgiref.sync.async_to_sync', 'flask.app.Flask.async_to_sync', 'itertools.chain', 'flask.app.Flask.ensure_sync', '<builtin>.RuntimeError', 'inspect.iscoroutinefunction', 'flask.app.Flask.update_template_context', '<builtin>.reversed']
<builtin>.reversed: ['<builtin>.reversed']
itertools.chain: ['itertools.chain']
flask.app.Flask.ensure_sync: ['asgiref.sync.async_to_sync', 'flask.app.Flask.async_to_sync', 'flask.app.Flask.ensure_sync', '<builtin>.RuntimeError', 'inspect.iscoroutinefunction']
flask.app.Flask.make_shell_context: ['flask.app.Flask.make_shell_context', 'sansio.app.App.shell_context_processors']
sansio.app.App.shell_context_processors: ['sansio.app.App.shell_context_processors']
flask.app.Flask.run: ['werkzeug.serving.is_running_from_reloader', '<builtin>.int', 'helpers.get_debug_flag', '<builtin>.bool', 'click.secho', 'sansio.app.App.config.get', 'werkzeug.serving.run_simple', 'helpers.get_load_dotenv', 'typing.cast', 'os.environ.get', 'flask.app.Flask.run']
os.environ.get: ['os.environ.get']
werkzeug.serving.is_running_from_reloader: ['werkzeug.serving.is_running_from_reloader']
click.secho: ['click.secho']
helpers.get_load_dotenv: ['helpers.get_load_dotenv']
helpers.get_debug_flag: ['helpers.get_debug_flag']
sansio.app.App.config.get: ['sansio.app.App.config.get']
werkzeug.serving.run_simple: ['werkzeug.serving.run_simple']
flask.app.Flask.test_client: ['flask.app.Flask.test_client', 'testing.FlaskClient', 'sansio.app.App.test_client_class']
testing.FlaskClient: ['testing.FlaskClient']
sansio.app.App.test_client_class: ['sansio.app.App.test_client_class']
flask.app.Flask.test_cli_runner: ['testing.FlaskCliRunner', 'flask.app.Flask.test_cli_runner', 'sansio.app.App.test_cli_runner_class']
testing.FlaskCliRunner: ['testing.FlaskCliRunner']
sansio.app.App.test_cli_runner_class: ['sansio.app.App.test_cli_runner_class']
flask.app.Flask.handle_http_exception: ['asgiref.sync.async_to_sync', 'flask.app.Flask.async_to_sync', 'sansio.app.App._find_error_handler', '<builtin>.isinstance', 'flask.app.Flask.ensure_sync', '<builtin>.RuntimeError', 'inspect.iscoroutinefunction', 'flask.app.Flask.handle_http_exception']
sansio.app.App._find_error_handler: ['sansio.app.App._find_error_handler']
flask.app.Flask.handle_user_exception: ['asgiref.sync.async_to_sync', 'flask.app.Flask.async_to_sync', 'sansio.app.App.trap_http_exception', 'sansio.app.App._find_error_handler', '<builtin>.isinstance', 'flask.app.Flask.ensure_sync', '<builtin>.RuntimeError', 'flask.app.Flask.handle_user_exception', 'inspect.iscoroutinefunction', 'flask.app.Flask.handle_http_exception']
sansio.app.App.trap_http_exception: ['sansio.app.App.trap_http_exception']
flask.app.Flask.handle_exception: ['sansio.app.App.session_interface.is_null_session', '<builtin>.TypeError', 'flask.app.Flask.log_exception', 'flask.app.Flask.make_response', 'itertools.chain', 'typing.cast', '<builtin>.len', '<builtin>.type', 'flask.app.Flask.async_to_sync', 'sys.exc_info', 'werkzeug.exceptions.InternalServerError', 'sansio.app.App._find_error_handler', 'flask.app.Flask.ensure_sync', 'signals.got_request_exception.send', 'sansio.app.App.logger.exception', 'flask.app.Flask.process_response', 'flask.app.Flask.handle_exception', 'sansio.app.App.session_interface.save_session', 'sansio.app.App.response_class', '<builtin>.isinstance', '<builtin>.RuntimeError', 'signals.request_finished.send', 'sansio.app.App.logger.error', 'flask.app.Flask.finalize_request', 'sansio.app.App.json.response', 'asgiref.sync.async_to_sync', '<builtin>.callable', 'globals.request_ctx._get_current_object', 'inspect.iscoroutinefunction', '<builtin>.reversed', 'sansio.app.App.response_class.force_type']
sys.exc_info: ['sys.exc_info']
signals.got_request_exception.send: ['signals.got_request_exception.send']
flask.app.Flask.log_exception: ['sansio.app.App.logger.error', 'flask.app.Flask.log_exception']
werkzeug.exceptions.InternalServerError: ['werkzeug.exceptions.InternalServerError']
flask.app.Flask.finalize_request: ['sansio.app.App.session_interface.is_null_session', '<builtin>.TypeError', 'flask.app.Flask.make_response', 'itertools.chain', 'typing.cast', '<builtin>.len', '<builtin>.type', 'flask.app.Flask.async_to_sync', 'sys.exc_info', 'flask.app.Flask.ensure_sync', 'sansio.app.App.logger.exception', 'flask.app.Flask.process_response', 'sansio.app.App.session_interface.save_session', 'sansio.app.App.response_class', '<builtin>.isinstance', '<builtin>.RuntimeError', 'signals.request_finished.send', 'flask.app.Flask.finalize_request', 'sansio.app.App.json.response', 'asgiref.sync.async_to_sync', '<builtin>.callable', 'globals.request_ctx._get_current_object', 'inspect.iscoroutinefunction', '<builtin>.reversed', 'sansio.app.App.response_class.force_type']
sansio.app.App.logger.error: ['sansio.app.App.logger.error']
flask.app.Flask.dispatch_request: ['<builtin>.getattr', 'asgiref.sync.async_to_sync', 'flask.app.Flask.async_to_sync', 'debughelpers.FormDataRoutingRedirect', 'flask.app.Flask.dispatch_request', 'flask.app.Flask.make_default_options_response', 'sansio.app.App.response_class', 'flask.app.Flask.ensure_sync', '<builtin>.isinstance', '<builtin>.RuntimeError', 'globals.request_ctx.url_adapter.allowed_methods', 'flask.app.Flask.raise_routing_exception', 'inspect.iscoroutinefunction']
<builtin>.getattr: ['<builtin>.getattr']
flask.app.Flask.make_default_options_response: ['flask.app.Flask.make_default_options_response', 'sansio.app.App.response_class', 'globals.request_ctx.url_adapter.allowed_methods']
flask.app.Flask.full_dispatch_request: ['sansio.app.App.session_interface.is_null_session', '<builtin>.TypeError', 'sansio.app.App.trap_http_exception', 'flask.app.Flask.make_response', 'itertools.chain', 'typing.cast', 'flask.app.Flask.handle_user_exception', 'flask.app.Flask.handle_http_exception', '<builtin>.len', '<builtin>.type', '<builtin>.getattr', 'flask.app.Flask.async_to_sync', 'debughelpers.FormDataRoutingRedirect', 'sys.exc_info', 'flask.app.Flask.dispatch_request', 'signals.request_started.send', 'flask.app.Flask.ensure_sync', 'sansio.app.App._find_error_handler', 'flask.app.Flask.raise_routing_exception', 'flask.app.Flask.full_dispatch_request', 'sansio.app.App.logger.exception', 'flask.app.Flask.process_response', 'sansio.app.App.session_interface.save_session', 'sansio.app.App.response_class', '<builtin>.isinstance', '<builtin>.RuntimeError', 'signals.request_finished.send', 'flask.app.Flask.finalize_request', 'sansio.app.App.json.response', 'asgiref.sync.async_to_sync', 'flask.app.Flask.make_default_options_response', '<builtin>.callable', 'globals.request_ctx._get_current_object', 'globals.request_ctx.url_adapter.allowed_methods', 'inspect.iscoroutinefunction', 'flask.app.Flask.preprocess_request', '<builtin>.reversed', 'sansio.app.App.response_class.force_type']
signals.request_started.send: ['signals.request_started.send']
flask.app.Flask.preprocess_request: ['asgiref.sync.async_to_sync', 'flask.app.Flask.async_to_sync', 'flask.app.Flask.ensure_sync', '<builtin>.RuntimeError', 'inspect.iscoroutinefunction', 'flask.app.Flask.preprocess_request', '<builtin>.reversed']
flask.app.Flask.make_response: ['<builtin>.TypeError', 'sansio.app.App.json.response', '<builtin>.type', 'sys.exc_info', 'flask.app.Flask.make_response', '<builtin>.callable', 'sansio.app.App.response_class', 'typing.cast', '<builtin>.isinstance', '<builtin>.len', 'sansio.app.App.response_class.force_type']
flask.app.Flask.process_response: ['sansio.app.App.session_interface.is_null_session', 'asgiref.sync.async_to_sync', 'flask.app.Flask.process_response', 'flask.app.Flask.async_to_sync', 'sansio.app.App.session_interface.save_session', 'itertools.chain', 'flask.app.Flask.ensure_sync', 'globals.request_ctx._get_current_object', '<builtin>.RuntimeError', 'inspect.iscoroutinefunction', '<builtin>.reversed']
signals.request_finished.send: ['signals.request_finished.send']
sansio.app.App.logger.exception: ['sansio.app.App.logger.exception']
globals.request_ctx.url_adapter.allowed_methods: ['globals.request_ctx.url_adapter.allowed_methods']
sansio.app.App.response_class: ['sansio.app.App.response_class']
inspect.iscoroutinefunction: ['inspect.iscoroutinefunction']
flask.app.Flask.async_to_sync: ['flask.app.Flask.async_to_sync', '<builtin>.RuntimeError', 'asgiref.sync.async_to_sync']
asgiref.sync.async_to_sync: ['asgiref.sync.async_to_sync']
flask.app.Flask.url_for: ['urllib.parse.quote', 'globals._cv_app.get', 'globals._cv_request.get', 'flask.app.Flask.url_for', '<builtin>.RuntimeError', '<builtin>.ValueError']
globals._cv_request.get: ['globals._cv_request.get']
globals._cv_app.get: ['globals._cv_app.get']
urllib.parse.quote: ['urllib.parse.quote']
<builtin>.len: ['<builtin>.len']
<builtin>.TypeError: ['<builtin>.TypeError']
sansio.app.App.json.response: ['sansio.app.App.json.response']
<builtin>.callable: ['<builtin>.callable']
sansio.app.App.response_class.force_type: ['sansio.app.App.response_class.force_type']
<builtin>.type: ['<builtin>.type']
globals.request_ctx._get_current_object: ['globals.request_ctx._get_current_object']
sansio.app.App.session_interface.is_null_session: ['sansio.app.App.session_interface.is_null_session']
sansio.app.App.session_interface.save_session: ['sansio.app.App.session_interface.save_session']
flask.app.Flask.do_teardown_request: ['flask.app.Flask.do_teardown_request', 'asgiref.sync.async_to_sync', 'flask.app.Flask.async_to_sync', 'sys.exc_info', 'itertools.chain', 'signals.request_tearing_down.send', 'flask.app.Flask.ensure_sync', '<builtin>.RuntimeError', 'inspect.iscoroutinefunction', '<builtin>.reversed']
signals.request_tearing_down.send: ['signals.request_tearing_down.send']
flask.app.Flask.do_teardown_appcontext: ['asgiref.sync.async_to_sync', 'flask.app.Flask.async_to_sync', 'flask.app.Flask.do_teardown_appcontext', 'sys.exc_info', 'flask.app.Flask.ensure_sync', '<builtin>.RuntimeError', 'signals.appcontext_tearing_down.send', 'inspect.iscoroutinefunction', '<builtin>.reversed']
signals.appcontext_tearing_down.send: ['signals.appcontext_tearing_down.send']
flask.app.Flask.app_context: ['flask.app.Flask.app_context', 'ctx.AppContext']
ctx.AppContext: ['ctx.AppContext']
flask.app.Flask.request_context: ['flask.app.Flask.request_context', 'ctx.RequestContext']
ctx.RequestContext: ['ctx.RequestContext']
flask.app.Flask.test_request_context: ['ctx.RequestContext', 'testing.EnvironBuilder', 'flask.app.Flask.request_context', 'flask.app.Flask.test_request_context']
testing.EnvironBuilder: ['testing.EnvironBuilder']
flask.app.Flask.wsgi_app: ['sansio.app.App.session_interface.is_null_session', '<builtin>.TypeError', 'flask.app.Flask.log_exception', 'sansio.app.App.trap_http_exception', 'flask.app.Flask.make_response', 'itertools.chain', 'typing.cast', 'flask.app.Flask.handle_user_exception', 'flask.app.Flask.handle_http_exception', 'flask.app.Flask.wsgi_app', '<builtin>.len', 'flask.app.Flask.request_context', '<builtin>.type', '<builtin>.getattr', 'flask.app.Flask.async_to_sync', 'debughelpers.FormDataRoutingRedirect', 'sys.exc_info', 'flask.app.Flask.dispatch_request', 'signals.request_started.send', 'werkzeug.exceptions.InternalServerError', 'globals._cv_request.get', 'flask.app.Flask.ensure_sync', 'sansio.app.App._find_error_handler', 'flask.app.Flask.raise_routing_exception', 'signals.got_request_exception.send', 'flask.app.Flask.full_dispatch_request', 'sansio.app.App.logger.exception', 'flask.app.Flask.process_response', 'sansio.app.App.should_ignore_error', 'globals._cv_app.get', 'sansio.app.App.session_interface.save_session', 'flask.app.Flask.handle_exception', 'sansio.app.App.response_class', '<builtin>.isinstance', '<builtin>.RuntimeError', 'signals.request_finished.send', 'sansio.app.App.logger.error', 'flask.app.Flask.finalize_request', 'sansio.app.App.json.response', 'asgiref.sync.async_to_sync', 'ctx.RequestContext', 'flask.app.Flask.make_default_options_response', '<builtin>.callable', 'globals.request_ctx._get_current_object', 'globals.request_ctx.url_adapter.allowed_methods', 'inspect.iscoroutinefunction', 'flask.app.Flask.preprocess_request', '<builtin>.reversed', 'sansio.app.App.response_class.force_type']
sansio.app.App.should_ignore_error: ['sansio.app.App.should_ignore_error']
flask.app.Flask.__call__: ['flask.app.Flask.__call__', 'sansio.app.App.session_interface.is_null_session', '<builtin>.TypeError', 'flask.app.Flask.log_exception', 'sansio.app.App.trap_http_exception', 'flask.app.Flask.make_response', 'itertools.chain', 'typing.cast', 'flask.app.Flask.handle_user_exception', 'flask.app.Flask.handle_http_exception', 'flask.app.Flask.wsgi_app', '<builtin>.len', 'flask.app.Flask.request_context', '<builtin>.type', '<builtin>.getattr', 'flask.app.Flask.async_to_sync', 'debughelpers.FormDataRoutingRedirect', 'sys.exc_info', 'flask.app.Flask.dispatch_request', 'signals.request_started.send', 'werkzeug.exceptions.InternalServerError', 'globals._cv_request.get', 'flask.app.Flask.ensure_sync', 'sansio.app.App._find_error_handler', 'flask.app.Flask.raise_routing_exception', 'signals.got_request_exception.send', 'flask.app.Flask.full_dispatch_request', 'sansio.app.App.logger.exception', 'flask.app.Flask.process_response', 'sansio.app.App.should_ignore_error', 'globals._cv_app.get', 'sansio.app.App.session_interface.save_session', 'flask.app.Flask.handle_exception', 'sansio.app.App.response_class', '<builtin>.isinstance', '<builtin>.RuntimeError', 'signals.request_finished.send', 'sansio.app.App.logger.error', 'flask.app.Flask.finalize_request', 'sansio.app.App.json.response', 'asgiref.sync.async_to_sync', 'ctx.RequestContext', 'flask.app.Flask.make_default_options_response', '<builtin>.callable', 'globals.request_ctx._get_current_object', 'globals.request_ctx.url_adapter.allowed_methods', 'inspect.iscoroutinefunction', 'flask.app.Flask.preprocess_request', '<builtin>.reversed', 'sansio.app.App.response_class.force_type']
flask.cli: ['typing.overload', 'click.Path', 'click.Choice', 'click.Path.__init__', 'flask.cli.with_appcontext', '<builtin>.list', '<builtin>.super', 'click.pass_context', 'flask.cli', 'click.make_pass_decorator', 'click.Group.main', 'flask.cli.pass_script_info', 'flask.cli.FlaskGroup.__init__', 'typing.TypeVar', 'flask.cli.main', 'functools.update_wrapper', 'click.command', 'click.Group.add_command', 'click.Option', 'click.option', 'flask.cli.CertParamType.__init__']
flask.cli.find_best_app: ['<builtin>.getattr', 'sys.exc_info', 'inspect.isfunction', 'flask.cli._called_with_wrong_args', 'flask.cli.find_best_app', '<builtin>.isinstance', '<builtin>.len', 'click.UsageError.__init__']
click.UsageError.__init__: ['click.UsageError.__init__']
inspect.isfunction: ['inspect.isfunction']
flask.cli._called_with_wrong_args: ['sys.exc_info', 'flask.cli._called_with_wrong_args']
flask.cli.find_app_by_string: ['<builtin>.getattr', 'flask.cli.find_app_by_string', 'sys.exc_info', 'flask.cli._called_with_wrong_args', 'inspect.isfunction', '<builtin>.isinstance', 'ast.literal_eval', 'ast.parse', 'click.UsageError.__init__']
ast.parse: ['ast.parse']
ast.literal_eval: ['ast.literal_eval']
flask.cli.prepare_import: ['sys.path.insert', 'os.path.basename', 'os.path.dirname', 'os.path.splitext', 'os.path.realpath', 'os.path.split', 'os.path.exists', 'os.path.join', 'flask.cli.prepare_import']
os.path.realpath: ['os.path.realpath']
os.path.splitext: ['os.path.splitext']
os.path.basename: ['os.path.basename']
os.path.dirname: ['os.path.dirname']
os.path.split: ['os.path.split']
os.path.exists: ['os.path.exists']
sys.path.insert: ['sys.path.insert']
typing.overload: ['typing.overload']
flask.cli.locate_app: ['flask.cli.find_app_by_string', '<builtin>.getattr', '<builtin>.__import__', 'sys.exc_info', 'inspect.isfunction', 'flask.cli._called_with_wrong_args', 'flask.cli.find_best_app', 'traceback.format_exc', '<builtin>.isinstance', 'ast.literal_eval', 'ast.parse', '<builtin>.len', 'click.UsageError.__init__', 'flask.cli.locate_app']
<builtin>.__import__: ['<builtin>.__import__']
traceback.format_exc: ['traceback.format_exc']
flask.cli.get_version: ['click.echo', 'platform.python_version', 'flask.cli.get_version']
platform.python_version: ['platform.python_version']
click.echo: ['click.echo']
click.Option: ['click.Option']
flask.cli.ScriptInfo.__init__: ['flask.cli.ScriptInfo.__init__']
flask.cli.ScriptInfo.load_app: ['<builtin>.__import__', 'flask.cli.find_app_by_string', 'inspect.isfunction', 'flask.cli._called_with_wrong_args', 'os.path.split', '<builtin>.len', 'os.path.dirname', 'flask.cli.prepare_import', 'sys.path.insert', '<builtin>.getattr', 'sys.exc_info', 'flask.cli.find_best_app', 'click.UsageError.__init__', 're.split', 'helpers.get_debug_flag', 'os.path.splitext', 'os.path.realpath', '<builtin>.isinstance', 'os.path.exists', 'ast.parse', 'flask.cli.locate_app', 'flask.cli.ScriptInfo.load_app', 'os.path.basename', 'traceback.format_exc', 'ast.literal_eval', 'os.path.join']
re.split: ['re.split']
click.make_pass_decorator: ['click.make_pass_decorator']
flask.cli.with_appcontext: ['flask.cli.with_appcontext', 'click.pass_context', 'functools.update_wrapper']
click.pass_context: ['click.pass_context']
flask.cli.with_appcontext.decorator: ['flask.cli.with_appcontext.decorator']
functools.update_wrapper: ['functools.update_wrapper']
flask.cli.AppGroup.command: ['flask.cli.AppGroup.command']
flask.cli.AppGroup.command.decorator: ['click.pass_context', 'functools.update_wrapper', 'flask.cli.AppGroup.command.decorator', 'flask.cli.with_appcontext', '<builtin>.super']
flask.cli.AppGroup.group: ['flask.cli.AppGroup.group', '<builtin>.super']
flask.cli._set_app: ['flask.cli._set_app']
flask.cli._set_debug: ['flask.cli._set_debug']
flask.cli._env_file_callback: ['click.secho', 'click.BadParameter', 'dotenv.find_dotenv', 'flask.cli._env_file_callback', 'os.path.isfile', 'importlib.import_module', 'flask.cli.load_dotenv', 'dotenv.load_dotenv']
importlib.import_module: ['importlib.import_module']
click.BadParameter: ['click.BadParameter']
flask.cli.load_dotenv: ['click.secho', 'dotenv.find_dotenv', 'os.path.isfile', 'flask.cli.load_dotenv', 'dotenv.load_dotenv']
click.Path: ['click.Path']
flask.cli.FlaskGroup.__init__: ['<builtin>.list', 'click.Group.add_command', '<builtin>.super', 'flask.cli.FlaskGroup.__init__']
<builtin>.list: ['<builtin>.list']
click.Group.add_command: ['click.Group.add_command']
flask.cli.FlaskGroup._load_plugin_commands: ['importlib.metadata.entry_points', 'click.Group.add_command', 'flask.cli.FlaskGroup._load_plugin_commands', 'importlib_metadata.entry_points']
importlib.metadata.entry_points: ['importlib.metadata.entry_points']
importlib_metadata.entry_points: ['importlib_metadata.entry_points']
flask.cli.FlaskGroup.get_command: ['click.secho', 'flask.cli.FlaskGroup.get_command', 'globals.current_app._get_current_object', 'importlib.metadata.entry_points', 'click.Group.add_command', 'importlib_metadata.entry_points', '<builtin>.super', 'flask.cli.FlaskGroup._load_plugin_commands']
globals.current_app._get_current_object: ['globals.current_app._get_current_object']
flask.cli.FlaskGroup.list_commands: ['<builtin>.set', 'click.secho', 'flask.cli.FlaskGroup.list_commands', 'importlib.metadata.entry_points', 'traceback.format_exc', 'click.Group.add_command', 'importlib_metadata.entry_points', '<builtin>.super', 'flask.cli.FlaskGroup._load_plugin_commands', '<builtin>.sorted']
<builtin>.set: ['<builtin>.set']
<builtin>.sorted: ['<builtin>.sorted']
flask.cli.FlaskGroup.make_context: ['flask.cli.ScriptInfo.__init__', '<builtin>.super', 'flask.cli.FlaskGroup.make_context', 'helpers.get_load_dotenv']
flask.cli.FlaskGroup.parse_args: ['flask.cli.FlaskGroup.parse_args', '<builtin>.super']
flask.cli._path_is_ancestor: ['os.path.join', '<builtin>.len', 'flask.cli._path_is_ancestor']
os.path.isfile: ['os.path.isfile']
dotenv.load_dotenv: ['dotenv.load_dotenv']
dotenv.find_dotenv: ['dotenv.find_dotenv']
flask.cli.show_server_banner: ['click.echo', 'werkzeug.serving.is_running_from_reloader', 'flask.cli.show_server_banner']
flask.cli.CertParamType.__init__: ['click.Path', 'flask.cli.CertParamType.__init__']
flask.cli.CertParamType.convert: ['flask.cli.CertParamType.convert', 'werkzeug.utils.import_string', '<builtin>.isinstance', 'click.BadParameter', 'click.STRING']
click.STRING: ['click.STRING']
werkzeug.utils.import_string: ['werkzeug.utils.import_string']
flask.cli._validate_key: ['click.BadParameter', '<builtin>.isinstance', 'flask.cli._validate_key']
flask.cli.SeparatedPathType.convert: ['<builtin>.super', 'flask.cli.SeparatedPathType.convert', 'click.Path.split_envvar_value']
click.Path.split_envvar_value: ['click.Path.split_envvar_value']
click.command: ['click.command']
click.option: ['click.option']
click.Path.__init__: ['click.Path.__init__']
flask.cli.pass_script_info: ['flask.cli.pass_script_info']
flask.cli.run_command: ['click.echo', 'werkzeug.serving.is_running_from_reloader', 'helpers.get_debug_flag', 'flask.cli.run_command', 'werkzeug.run_simple', 'traceback.print_exc', 'flask.cli.show_server_banner']
traceback.print_exc: ['traceback.print_exc']
flask.cli.run_command.app: ['flask.cli.run_command.app']
werkzeug.run_simple: ['werkzeug.run_simple']
flask.cli.shell_command: ['rlcompleter.Completer', 'code.interact', '<builtin>.getattr', '<builtin>.open', 'globals.current_app.make_shell_context', 'os.path.isfile', '<builtin>.compile', 'readline.set_completer', '<builtin>.eval', 'os.environ.get', 'flask.cli.shell_command']
<builtin>.compile: ['<builtin>.compile']
<builtin>.eval: ['<builtin>.eval']
globals.current_app.make_shell_context: ['globals.current_app.make_shell_context']
rlcompleter.Completer: ['rlcompleter.Completer']
readline.set_completer: ['readline.set_completer']
code.interact: ['code.interact']
click.Choice: ['click.Choice']
flask.cli.routes_command: ['globals.current_app.url_map.iter_rules', '<builtin>.range', '<builtin>.set', 'click.echo', 'operator.itemgetter', '<builtin>.enumerate', '<builtin>.any', '<builtin>.list', 'flask.cli.routes_command', '<builtin>.max', '<builtin>.len', '<builtin>.sorted']
globals.current_app.url_map.iter_rules: ['globals.current_app.url_map.iter_rules']
<builtin>.any: ['<builtin>.any']
operator.itemgetter: ['operator.itemgetter']
<builtin>.max: ['<builtin>.max']
<builtin>.range: ['<builtin>.range']
<builtin>.enumerate: ['<builtin>.enumerate']
flask.cli.main: ['flask.cli.main', 'click.Group.main']
click.Group.main: ['click.Group.main']
flask.helpers: ['flask.helpers', 'functools.lru_cache']
flask.helpers.get_debug_flag: ['flask.helpers.get_debug_flag', 'os.environ.get', '<builtin>.bool']
flask.helpers.get_load_dotenv: ['flask.helpers.get_load_dotenv', 'os.environ.get']
flask.helpers.stream_with_context: ['<builtin>.hasattr', '<builtin>.iter', 'globals._cv_request.get', 'functools.update_wrapper', 'flask.helpers.stream_with_context', '<builtin>.RuntimeError', '<builtin>.next', 'flask.helpers.stream_with_context.generator']
<builtin>.iter: ['<builtin>.iter']
flask.helpers.stream_with_context.decorator: ['flask.helpers.stream_with_context.decorator', '<builtin>.hasattr', '<builtin>.iter', 'globals._cv_request.get', 'functools.update_wrapper', 'flask.helpers.stream_with_context', '<builtin>.RuntimeError', '<builtin>.next', 'flask.helpers.stream_with_context.generator']
flask.helpers.stream_with_context.generator: ['<builtin>.RuntimeError', 'globals._cv_request.get', '<builtin>.hasattr', 'flask.helpers.stream_with_context.generator']
<builtin>.hasattr: ['<builtin>.hasattr']
<builtin>.next: ['<builtin>.next']
flask.helpers.make_response: ['globals.current_app.make_response', 'globals.current_app.response_class', '<builtin>.len', 'flask.helpers.make_response']
globals.current_app.response_class: ['globals.current_app.response_class']
globals.current_app.make_response: ['globals.current_app.make_response']
flask.helpers.url_for: ['globals.current_app.url_for', 'flask.helpers.url_for']
globals.current_app.url_for: ['globals.current_app.url_for']
flask.helpers.redirect: ['globals.current_app.redirect', 'flask.helpers.redirect', 'werkzeug.utils.redirect']
globals.current_app.redirect: ['globals.current_app.redirect']
werkzeug.utils.redirect: ['werkzeug.utils.redirect']
flask.helpers.abort: ['flask.helpers.abort', 'globals.current_app.aborter', 'werkzeug.exceptions.abort']
globals.current_app.aborter: ['globals.current_app.aborter']
werkzeug.exceptions.abort: ['werkzeug.exceptions.abort']
flask.helpers.get_template_attribute: ['globals.current_app.jinja_env.get_template', '<builtin>.getattr', 'flask.helpers.get_template_attribute']
globals.current_app.jinja_env.get_template: ['globals.current_app.jinja_env.get_template']
flask.helpers.flash: ['globals.session.get', 'signals.message_flashed.send', 'flask.helpers.flash', 'globals.current_app._get_current_object']
globals.session.get: ['globals.session.get']
signals.message_flashed.send: ['signals.message_flashed.send']
flask.helpers.get_flashed_messages: ['globals.session.pop', '<builtin>.list', '<builtin>.filter', 'flask.helpers.get_flashed_messages']
globals.session.pop: ['globals.session.pop']
flask.helpers.get_flashed_messages.<lambda1>: ['flask.helpers.get_flashed_messages.<lambda1>']
<builtin>.filter: ['<builtin>.filter']
flask.helpers._prepare_send_file_kwargs: ['flask.helpers._prepare_send_file_kwargs']
flask.helpers.send_file: ['flask.helpers.send_file', 'flask.helpers._prepare_send_file_kwargs']
flask.helpers.send_from_directory: ['flask.helpers.send_from_directory', 'flask.helpers._prepare_send_file_kwargs']
flask.helpers.get_root_path: ['os.path.abspath', '<builtin>.hasattr', '<builtin>.getattr', '<builtin>.__import__', 'os.path.dirname', '<builtin>.RuntimeError', 'os.getcwd', 'flask.helpers.get_root_path', 'sys.modules.get']
sys.modules.get: ['sys.modules.get']
os.path.abspath: ['os.path.abspath']
os.getcwd: ['os.getcwd']
functools.lru_cache: ['functools.lru_cache']
flask.helpers._split_blueprint_path: ['flask.helpers._split_blueprint_path']
flask.signals: ['flask.signals', 'blinker.Namespace']
blinker.Namespace: ['blinker.Namespace']
flask.wrappers: ['flask.wrappers']
flask.wrappers.Request.max_content_length: ['flask.wrappers.Request.max_content_length']
flask.wrappers.Request.endpoint: ['flask.wrappers.Request.endpoint']
flask.wrappers.Request.blueprint: ['flask.wrappers.Request.blueprint']
flask.wrappers.Request.blueprints: ['helpers._split_blueprint_path', 'flask.wrappers.Request.blueprints']
helpers._split_blueprint_path: ['helpers._split_blueprint_path']
flask.wrappers.Request._load_form_data: ['flask.wrappers.Request._load_form_data', '<builtin>.super', 'debughelpers.attach_enctype_error_multidict']
debughelpers.attach_enctype_error_multidict: ['debughelpers.attach_enctype_error_multidict']
flask.wrappers.Request.on_json_loading_failed: ['flask.wrappers.Request.on_json_loading_failed', '<builtin>.super', 'werkzeug.exceptions.BadRequest']
werkzeug.exceptions.BadRequest: ['werkzeug.exceptions.BadRequest']
flask.wrappers.Response.max_cookie_size: ['flask.wrappers.Response.max_cookie_size', '<builtin>.super']
flask.debughelpers: ['flask.debughelpers']
flask.debughelpers.DebugFilesKeyError.__init__: ['flask.debughelpers.DebugFilesKeyError.__init__', '<builtin>.repr']
<builtin>.repr: ['<builtin>.repr']
flask.debughelpers.DebugFilesKeyError.__str__: ['flask.debughelpers.DebugFilesKeyError.__str__']
flask.debughelpers.FormDataRoutingRedirect.__init__: ['flask.debughelpers.FormDataRoutingRedirect.__init__', '<builtin>.super', '<builtin>.isinstance']
flask.debughelpers.attach_enctype_error_multidict: ['flask.debughelpers.attach_enctype_error_multidict']
flask.debughelpers.attach_enctype_error_multidict.newcls.__getitem__: ['flask.debughelpers.DebugFilesKeyError.__init__', '<builtin>.super', '<builtin>.repr', 'flask.debughelpers.attach_enctype_error_multidict.newcls.__getitem__']
flask.debughelpers._dump_loader_info: ['<builtin>.type', 'flask.debughelpers._dump_loader_info', '<builtin>.all', '<builtin>.isinstance', '<builtin>.sorted']
<builtin>.all: ['<builtin>.all']
flask.debughelpers.explain_template_loading_attempts: ['<builtin>.type', 'flask.debughelpers._dump_loader_info', '<builtin>.all', 'flask.debughelpers.explain_template_loading_attempts', '<builtin>.isinstance', '<builtin>.enumerate', '<builtin>.repr', '<builtin>.sorted']
flask.blueprints: ['flask.blueprints']
flask.blueprints.Blueprint.__init__: ['flask.blueprints.Blueprint.__init__', 'cli.AppGroup', '<builtin>.super']
cli.AppGroup: ['cli.AppGroup']
flask.blueprints.Blueprint.get_send_file_max_age: ['<builtin>.isinstance', 'flask.blueprints.Blueprint.get_send_file_max_age', '<builtin>.int']
flask.blueprints.Blueprint.send_static_file: ['flask.blueprints.Blueprint.send_static_file', '<builtin>.int', 'typing.cast', '<builtin>.isinstance', '<builtin>.RuntimeError', 'helpers.send_from_directory', 'flask.blueprints.Blueprint.get_send_file_max_age']
flask.blueprints.Blueprint.open_resource: ['<builtin>.open', 'os.path.join', '<builtin>.ValueError', 'flask.blueprints.Blueprint.open_resource']
flask.sansio.blueprints: ['typing.TypeVar', 'flask.sansio.blueprints']
flask.sansio.blueprints.BlueprintSetupState.__init__: ['flask.sansio.blueprints.BlueprintSetupState.__init__', '<builtin>.dict']
flask.sansio.blueprints.BlueprintSetupState.add_url_rule: ['<builtin>.dict', 'flask.sansio.blueprints.BlueprintSetupState.add_url_rule', 'scaffold._endpoint_from_view_func']
scaffold._endpoint_from_view_func: ['scaffold._endpoint_from_view_func']
flask.sansio.blueprints.Blueprint.__init__: ['flask.sansio.blueprints.Blueprint.__init__', '<builtin>.super', '<builtin>.ValueError']
flask.sansio.blueprints.Blueprint._check_setup_finished: ['flask.sansio.blueprints.Blueprint._check_setup_finished', '<builtin>.AssertionError']
<builtin>.AssertionError: ['<builtin>.AssertionError']
flask.sansio.blueprints.Blueprint: ['scaffold.setupmethod', 'flask.sansio.blueprints.Blueprint']
scaffold.setupmethod: ['scaffold.setupmethod']
flask.sansio.blueprints.Blueprint.record: ['scaffold.Scaffold.deferred_functions.append', 'flask.sansio.blueprints.Blueprint.record']
scaffold.Scaffold.deferred_functions.append: ['scaffold.Scaffold.deferred_functions.append']
flask.sansio.blueprints.Blueprint.record_once: ['flask.sansio.blueprints.Blueprint.record', 'scaffold.Scaffold.deferred_functions.append', 'functools.update_wrapper', 'flask.sansio.blueprints.Blueprint.record_once']
flask.sansio.blueprints.Blueprint.record_once.wrapper: ['globals.current_app.url_map.iter_rules', 'rlcompleter.Completer', 'globals.current_app.make_shell_context', 'flask.sansio.blueprints.Blueprint.app_errorhandler.decorator.from_blueprint', '<builtin>.compile', '<builtin>.list', 'flask.sansio.blueprints.Blueprint.add_app_template_global.register_template', 'flask.cli.routes_command', '<builtin>.max', '<builtin>.any', '<builtin>.len', 'flask.cli.shell_command', '<builtin>.eval', 'os.environ.get', '<builtin>.getattr', '<builtin>.enumerate', '<builtin>.range', 'click.echo', 'flask.sansio.blueprints.Blueprint.add_app_template_test.register_template', '<builtin>.set', 'code.interact', 'flask.sansio.blueprints.Blueprint.add_app_template_filter.register_template', '<builtin>.sorted', 'flask.sansio.blueprints.Blueprint.record_once.wrapper', '<builtin>.open', 'operator.itemgetter', 'os.path.isfile', 'readline.set_completer']
flask.sansio.blueprints.Blueprint.add_app_template_test.register_template: ['flask.sansio.blueprints.Blueprint.add_app_template_test.register_template']
flask.sansio.blueprints.Blueprint.add_app_template_filter.register_template: ['flask.sansio.blueprints.Blueprint.add_app_template_filter.register_template']
flask.sansio.blueprints.Blueprint.app_errorhandler.decorator.from_blueprint: ['flask.sansio.blueprints.Blueprint.app_errorhandler.decorator.from_blueprint']
flask.sansio.blueprints.Blueprint.add_app_template_global.register_template: ['flask.sansio.blueprints.Blueprint.add_app_template_global.register_template']
flask.sansio.blueprints.Blueprint.make_setup_state: ['flask.sansio.blueprints.BlueprintSetupState.__init__', '<builtin>.dict', 'flask.sansio.blueprints.Blueprint.make_setup_state']
flask.sansio.blueprints.Blueprint.register_blueprint: ['flask.sansio.blueprints.Blueprint.register_blueprint', 'scaffold.Scaffold._blueprints.append', '<builtin>.ValueError']
scaffold.Scaffold._blueprints.append: ['scaffold.Scaffold._blueprints.append']
flask.sansio.blueprints.Blueprint.register: ['scaffold.Scaffold.before_request_funcs.items', '<builtin>.dict', 'scaffold.Scaffold.view_functions.items', 'flask.sansio.blueprints.Blueprint._merge_blueprint_funcs.extend', '<builtin>.ValueError', 'scaffold.Scaffold.url_default_functions.items', 'flask.sansio.blueprints.BlueprintSetupState.__init__', '<builtin>.any', 'scaffold.Scaffold.deferred_functions', 'scaffold._endpoint_from_view_func', 'scaffold.Scaffold.template_context_processors.items', 'flask.sansio.blueprints.Blueprint.make_setup_state', 'flask.sansio.blueprints.Blueprint.register', 'scaffold.Scaffold.after_request_funcs.items', 'scaffold.Scaffold.teardown_request_funcs.items', 'flask.sansio.blueprints.BlueprintSetupState.add_url_rule', 'collections.defaultdict', 'flask.sansio.blueprints.Blueprint._merge_blueprint_funcs', 'scaffold.Scaffold.error_handler_spec.items', 'scaffold.Scaffold.url_value_preprocessors.items']
flask.sansio.blueprints.Blueprint._merge_blueprint_funcs: ['scaffold.Scaffold.after_request_funcs.items', 'collections.defaultdict', 'scaffold.Scaffold.before_request_funcs.items', 'scaffold.Scaffold.view_functions.items', 'scaffold.Scaffold.teardown_request_funcs.items', 'flask.sansio.blueprints.Blueprint._merge_blueprint_funcs', 'scaffold.Scaffold.error_handler_spec.items', 'flask.sansio.blueprints.Blueprint._merge_blueprint_funcs.extend', 'scaffold.Scaffold.url_default_functions.items', 'scaffold.Scaffold.template_context_processors.items', 'scaffold.Scaffold.url_value_preprocessors.items']
scaffold.Scaffold.deferred_functions: ['scaffold.Scaffold.deferred_functions']
flask.sansio.blueprints.Blueprint._merge_blueprint_funcs.extend: ['scaffold.Scaffold.after_request_funcs.items', 'scaffold.Scaffold.before_request_funcs.items', 'scaffold.Scaffold.teardown_request_funcs.items', 'flask.sansio.blueprints.Blueprint._merge_blueprint_funcs.extend', 'scaffold.Scaffold.url_default_functions.items', 'scaffold.Scaffold.template_context_processors.items', 'scaffold.Scaffold.url_value_preprocessors.items']
scaffold.Scaffold.after_request_funcs.items: ['scaffold.Scaffold.after_request_funcs.items']
scaffold.Scaffold.before_request_funcs.items: ['scaffold.Scaffold.before_request_funcs.items']
scaffold.Scaffold.teardown_request_funcs.items: ['scaffold.Scaffold.teardown_request_funcs.items']
scaffold.Scaffold.url_default_functions.items: ['scaffold.Scaffold.url_default_functions.items']
scaffold.Scaffold.template_context_processors.items: ['scaffold.Scaffold.template_context_processors.items']
scaffold.Scaffold.url_value_preprocessors.items: ['scaffold.Scaffold.url_value_preprocessors.items']
scaffold.Scaffold.error_handler_spec.items: ['scaffold.Scaffold.error_handler_spec.items']
collections.defaultdict: ['collections.defaultdict']
scaffold.Scaffold.view_functions.items: ['scaffold.Scaffold.view_functions.items']
flask.sansio.blueprints.Blueprint.add_url_rule: ['flask.sansio.blueprints.Blueprint.add_url_rule', '<builtin>.hasattr', '<builtin>.ValueError', 'scaffold.Scaffold.deferred_functions.append', 'flask.sansio.blueprints.Blueprint.record']
flask.sansio.blueprints.Blueprint.add_url_rule.<lambda1>: ['flask.sansio.blueprints.Blueprint.add_url_rule.<lambda1>']
flask.sansio.blueprints.Blueprint.app_template_filter: ['flask.sansio.blueprints.Blueprint.app_template_filter']
flask.sansio.blueprints.Blueprint.app_template_filter.decorator: ['flask.sansio.blueprints.Blueprint.add_app_template_filter', 'functools.update_wrapper', 'flask.sansio.blueprints.Blueprint.record_once', 'scaffold.Scaffold.deferred_functions.append', 'flask.sansio.blueprints.Blueprint.app_template_filter.decorator', 'flask.sansio.blueprints.Blueprint.record']
flask.sansio.blueprints.Blueprint.add_app_template_filter: ['flask.sansio.blueprints.Blueprint.add_app_template_filter', 'functools.update_wrapper', 'flask.sansio.blueprints.Blueprint.record_once', 'scaffold.Scaffold.deferred_functions.append', 'flask.sansio.blueprints.Blueprint.record']
flask.sansio.blueprints.Blueprint.app_template_test: ['flask.sansio.blueprints.Blueprint.app_template_test']
flask.sansio.blueprints.Blueprint.app_template_test.decorator: ['flask.sansio.blueprints.Blueprint.add_app_template_test', 'functools.update_wrapper', 'flask.sansio.blueprints.Blueprint.record_once', 'scaffold.Scaffold.deferred_functions.append', 'flask.sansio.blueprints.Blueprint.app_template_test.decorator', 'flask.sansio.blueprints.Blueprint.record']
flask.sansio.blueprints.Blueprint.add_app_template_test: ['flask.sansio.blueprints.Blueprint.add_app_template_test', 'functools.update_wrapper', 'flask.sansio.blueprints.Blueprint.record_once', 'scaffold.Scaffold.deferred_functions.append', 'flask.sansio.blueprints.Blueprint.record']
flask.sansio.blueprints.Blueprint.app_template_global: ['flask.sansio.blueprints.Blueprint.app_template_global']
flask.sansio.blueprints.Blueprint.app_template_global.decorator: ['flask.sansio.blueprints.Blueprint.add_app_template_global', 'flask.sansio.blueprints.Blueprint.app_template_global.decorator', 'functools.update_wrapper', 'flask.sansio.blueprints.Blueprint.record_once', 'scaffold.Scaffold.deferred_functions.append', 'flask.sansio.blueprints.Blueprint.record']
flask.sansio.blueprints.Blueprint.add_app_template_global: ['flask.sansio.blueprints.Blueprint.add_app_template_global', 'functools.update_wrapper', 'flask.sansio.blueprints.Blueprint.record_once', 'scaffold.Scaffold.deferred_functions.append', 'flask.sansio.blueprints.Blueprint.record']
flask.sansio.blueprints.Blueprint.before_app_request: ['functools.update_wrapper', 'flask.sansio.blueprints.Blueprint.record_once', 'flask.sansio.blueprints.Blueprint.before_app_request', 'scaffold.Scaffold.deferred_functions.append', 'flask.sansio.blueprints.Blueprint.record']
flask.sansio.blueprints.Blueprint.before_app_request.<lambda1>: ['flask.sansio.blueprints.Blueprint.before_app_request.<lambda1>']
flask.sansio.blueprints.Blueprint.after_app_request: ['flask.sansio.blueprints.Blueprint.after_app_request', 'functools.update_wrapper', 'flask.sansio.blueprints.Blueprint.record_once', 'scaffold.Scaffold.deferred_functions.append', 'flask.sansio.blueprints.Blueprint.record']
flask.sansio.blueprints.Blueprint.after_app_request.<lambda1>: ['flask.sansio.blueprints.Blueprint.after_app_request.<lambda1>']
flask.sansio.blueprints.Blueprint.teardown_app_request: ['flask.sansio.blueprints.Blueprint.teardown_app_request', 'functools.update_wrapper', 'flask.sansio.blueprints.Blueprint.record_once', 'scaffold.Scaffold.deferred_functions.append', 'flask.sansio.blueprints.Blueprint.record']
flask.sansio.blueprints.Blueprint.teardown_app_request.<lambda1>: ['flask.sansio.blueprints.Blueprint.teardown_app_request.<lambda1>']
flask.sansio.blueprints.Blueprint.app_context_processor: ['flask.sansio.blueprints.Blueprint.app_context_processor', 'functools.update_wrapper', 'flask.sansio.blueprints.Blueprint.record_once', 'scaffold.Scaffold.deferred_functions.append', 'flask.sansio.blueprints.Blueprint.record']
flask.sansio.blueprints.Blueprint.app_context_processor.<lambda1>: ['flask.sansio.blueprints.Blueprint.app_context_processor.<lambda1>']
flask.sansio.blueprints.Blueprint.app_errorhandler: ['flask.sansio.blueprints.Blueprint.app_errorhandler']
flask.sansio.blueprints.Blueprint.app_errorhandler.decorator: ['flask.sansio.blueprints.Blueprint.app_errorhandler.decorator', 'functools.update_wrapper', 'flask.sansio.blueprints.Blueprint.record_once', 'scaffold.Scaffold.deferred_functions.append', 'flask.sansio.blueprints.Blueprint.record']
flask.sansio.blueprints.Blueprint.app_url_value_preprocessor: ['flask.sansio.blueprints.Blueprint.app_url_value_preprocessor', 'functools.update_wrapper', 'flask.sansio.blueprints.Blueprint.record_once', 'scaffold.Scaffold.deferred_functions.append', 'flask.sansio.blueprints.Blueprint.record']
flask.sansio.blueprints.Blueprint.app_url_value_preprocessor.<lambda1>: ['flask.sansio.blueprints.Blueprint.app_url_value_preprocessor.<lambda1>']
flask.sansio.blueprints.Blueprint.app_url_defaults: ['flask.sansio.blueprints.Blueprint.app_url_defaults', 'functools.update_wrapper', 'flask.sansio.blueprints.Blueprint.record_once', 'scaffold.Scaffold.deferred_functions.append', 'flask.sansio.blueprints.Blueprint.record']
flask.sansio.blueprints.Blueprint.app_url_defaults.<lambda1>: ['flask.sansio.blueprints.Blueprint.app_url_defaults.<lambda1>']
flask.sansio.scaffold: ['<builtin>.object', 'typing.TypeVar', 'flask.sansio.scaffold']
<builtin>.object: ['<builtin>.object']
flask.sansio.scaffold.setupmethod: ['functools.update_wrapper', 'typing.cast', 'flask.sansio.scaffold.setupmethod']
flask.sansio.scaffold.setupmethod.wrapper_func: ['globals.current_app.url_map.iter_rules', 'rlcompleter.Completer', '<builtin>.TypeError', 'flask.sansio.scaffold.Scaffold.get', 'globals.current_app.make_shell_context', '<builtin>.ValueError', '<builtin>.compile', 'flask.sansio.scaffold.Scaffold.url_value_preprocessor', 'flask.cli.routes_command', '<builtin>.list', '<builtin>.max', '<builtin>.len', '<builtin>.any', 'flask.cli.shell_command', '<builtin>.eval', 'os.environ.get', 'readline.set_completer', '<builtin>.getattr', '<builtin>.enumerate', 'flask.sansio.scaffold.Scaffold.post', 'flask.sansio.scaffold.setupmethod.wrapper_func', 'flask.sansio.scaffold.Scaffold.register_error_handler', 'flask.sansio.scaffold.Scaffold.errorhandler', '<builtin>.issubclass', '<builtin>.range', 'click.echo', '<builtin>.set', 'code.interact', 'flask.sansio.scaffold.Scaffold.add_url_rule', '<builtin>.isinstance', 'flask.sansio.scaffold.Scaffold.patch', 'flask.sansio.scaffold.Scaffold.url_defaults', 'flask.sansio.scaffold.Scaffold.after_request', 'flask.sansio.scaffold.Scaffold.context_processor', '<builtin>.sorted', 'flask.sansio.scaffold.Scaffold._get_exc_class_and_code', 'flask.sansio.scaffold.Scaffold.put', 'flask.sansio.scaffold.Scaffold.route', 'flask.sansio.scaffold.Scaffold.teardown_request', '<builtin>.open', 'flask.sansio.scaffold.Scaffold.before_request', 'operator.itemgetter', 'flask.sansio.scaffold.Scaffold.delete', 'os.path.isfile', 'flask.sansio.scaffold.Scaffold.endpoint', 'flask.sansio.scaffold.Scaffold._method_route']
flask.sansio.scaffold.Scaffold.get: ['flask.sansio.scaffold.Scaffold.route', 'flask.sansio.scaffold.Scaffold._method_route', '<builtin>.TypeError', 'flask.sansio.scaffold.Scaffold.get']
flask.sansio.scaffold.Scaffold.add_url_rule: ['flask.sansio.scaffold.Scaffold.add_url_rule']
flask.sansio.scaffold.Scaffold.patch: ['flask.sansio.scaffold.Scaffold._method_route', '<builtin>.TypeError', 'flask.sansio.scaffold.Scaffold.patch', 'flask.sansio.scaffold.Scaffold.route']
flask.sansio.scaffold.Scaffold.url_defaults: ['flask.sansio.scaffold.Scaffold.url_defaults']
flask.sansio.scaffold.Scaffold.after_request: ['flask.sansio.scaffold.Scaffold.after_request']
flask.sansio.scaffold.Scaffold.url_value_preprocessor: ['flask.sansio.scaffold.Scaffold.url_value_preprocessor']
flask.sansio.scaffold.Scaffold.context_processor: ['flask.sansio.scaffold.Scaffold.context_processor']
flask.sansio.scaffold.Scaffold.put: ['flask.sansio.scaffold.Scaffold.put', 'flask.sansio.scaffold.Scaffold._method_route', '<builtin>.TypeError', 'flask.sansio.scaffold.Scaffold.route']
flask.sansio.scaffold.Scaffold.route: ['flask.sansio.scaffold.Scaffold.route']
flask.sansio.scaffold.Scaffold.teardown_request: ['flask.sansio.scaffold.Scaffold.teardown_request']
flask.sansio.scaffold.Scaffold.before_request: ['flask.sansio.scaffold.Scaffold.before_request']
flask.sansio.scaffold.Scaffold.endpoint: ['flask.sansio.scaffold.Scaffold.endpoint']
flask.sansio.scaffold.Scaffold.delete: ['flask.sansio.scaffold.Scaffold._method_route', 'flask.sansio.scaffold.Scaffold.delete', '<builtin>.TypeError', 'flask.sansio.scaffold.Scaffold.route']
flask.sansio.scaffold.Scaffold.post: ['flask.sansio.scaffold.Scaffold.post', 'flask.sansio.scaffold.Scaffold._method_route', '<builtin>.TypeError', 'flask.sansio.scaffold.Scaffold.route']
flask.sansio.scaffold.Scaffold.register_error_handler: ['<builtin>.TypeError', '<builtin>.isinstance', '<builtin>.ValueError', 'flask.sansio.scaffold.Scaffold.register_error_handler', '<builtin>.issubclass', 'flask.sansio.scaffold.Scaffold._get_exc_class_and_code']
flask.sansio.scaffold.Scaffold.errorhandler: ['flask.sansio.scaffold.Scaffold.errorhandler']
flask.sansio.scaffold.Scaffold.__init__: ['flask.sansio.scaffold.Scaffold.__init__', 'helpers.get_root_path', 'collections.defaultdict']
helpers.get_root_path: ['helpers.get_root_path']
flask.sansio.scaffold.Scaffold.__init__.<lambda1>: ['flask.sansio.scaffold.Scaffold.__init__.<lambda1>', 'collections.defaultdict']
flask.sansio.scaffold.Scaffold.__repr__: ['flask.sansio.scaffold.Scaffold.__repr__', '<builtin>.type']
flask.sansio.scaffold.Scaffold._check_setup_finished: ['flask.sansio.scaffold.Scaffold._check_setup_finished']
flask.sansio.scaffold.Scaffold.static_folder: ['flask.sansio.scaffold.Scaffold.static_folder', 'os.path.join', 'os.fspath']
os.fspath: ['os.fspath']
flask.sansio.scaffold.Scaffold.has_static_folder: ['flask.sansio.scaffold.Scaffold.has_static_folder']
flask.sansio.scaffold.Scaffold.static_url_path: ['os.path.basename', 'flask.sansio.scaffold.Scaffold.static_url_path']
flask.sansio.scaffold.Scaffold: ['werkzeug.utils.cached_property', 'flask.sansio.scaffold.setupmethod', 'functools.update_wrapper', 'typing.cast', 'flask.sansio.scaffold.Scaffold']
werkzeug.utils.cached_property: ['werkzeug.utils.cached_property']
flask.sansio.scaffold.Scaffold.jinja_loader: ['os.path.join', 'flask.sansio.scaffold.Scaffold.jinja_loader', 'jinja2.FileSystemLoader']
jinja2.FileSystemLoader: ['jinja2.FileSystemLoader']
flask.sansio.scaffold.Scaffold._method_route: ['flask.sansio.scaffold.Scaffold._method_route', '<builtin>.TypeError', 'flask.sansio.scaffold.Scaffold.route']
flask.sansio.scaffold.Scaffold.route.decorator: ['flask.sansio.scaffold.Scaffold.add_url_rule', 'flask.sansio.scaffold.Scaffold.route.decorator']
flask.sansio.scaffold.Scaffold.endpoint.decorator: ['flask.sansio.scaffold.Scaffold.endpoint.decorator']
flask.sansio.scaffold.Scaffold.errorhandler.decorator: ['flask.sansio.scaffold.Scaffold.errorhandler.decorator', '<builtin>.TypeError', '<builtin>.isinstance', '<builtin>.ValueError', 'flask.sansio.scaffold.Scaffold.register_error_handler', '<builtin>.issubclass', 'flask.sansio.scaffold.Scaffold._get_exc_class_and_code']
flask.sansio.scaffold.Scaffold._get_exc_class_and_code: ['<builtin>.TypeError', '<builtin>.isinstance', '<builtin>.ValueError', '<builtin>.issubclass', 'flask.sansio.scaffold.Scaffold._get_exc_class_and_code']
<builtin>.issubclass: ['<builtin>.issubclass']
flask.sansio.scaffold._endpoint_from_view_func: ['flask.sansio.scaffold._endpoint_from_view_func']
flask.sansio.scaffold._path_is_relative_to: ['flask.sansio.scaffold._path_is_relative_to']
flask.sansio.scaffold._find_package_path: ['os.path.commonpath', 'pathlib.Path', 'flask.sansio.scaffold._find_package_path', '<builtin>.ValueError', 'os.getcwd', 'flask.sansio.scaffold._path_is_relative_to', '<builtin>.next', 'os.path.dirname']
os.path.commonpath: ['os.path.commonpath']
pathlib.Path: ['pathlib.Path']
flask.sansio.scaffold.find_package: ['os.path.abspath', 'os.path.commonpath', 'flask.sansio.scaffold.find_package', 'os.path.basename', 'os.path.dirname', 'pathlib.Path', 'flask.sansio.scaffold._find_package_path', '<builtin>.ValueError', 'os.getcwd', 'os.path.split', 'flask.sansio.scaffold._path_is_relative_to', '<builtin>.next', 'pathlib.PurePath']
pathlib.PurePath: ['pathlib.PurePath']
flask.templating: ['flask.templating']
flask.templating._default_template_ctx_processor: ['globals._cv_app.get', 'flask.templating._default_template_ctx_processor', 'globals._cv_request.get']
flask.templating.Environment.__init__: ['flask.templating.Environment.__init__', 'jinja2.Environment.__init__']
jinja2.Environment.__init__: ['jinja2.Environment.__init__']
flask.templating.DispatchingJinjaLoader.__init__: ['flask.templating.DispatchingJinjaLoader.__init__']
flask.templating.DispatchingJinjaLoader.get_source: ['jinja2.TemplateNotFound', 'flask.templating.DispatchingJinjaLoader._get_source_explained', 'flask.templating.DispatchingJinjaLoader.get_source', 'flask.templating.DispatchingJinjaLoader._get_source_fast', 'flask.templating.DispatchingJinjaLoader._iter_loaders', 'debughelpers.explain_template_loading_attempts']
flask.templating.DispatchingJinjaLoader._get_source_explained: ['jinja2.TemplateNotFound', 'flask.templating.DispatchingJinjaLoader._get_source_explained', 'debughelpers.explain_template_loading_attempts', 'flask.templating.DispatchingJinjaLoader._iter_loaders']
flask.templating.DispatchingJinjaLoader._get_source_fast: ['jinja2.TemplateNotFound', 'flask.templating.DispatchingJinjaLoader._get_source_fast', 'flask.templating.DispatchingJinjaLoader._iter_loaders']
flask.templating.DispatchingJinjaLoader._iter_loaders: ['flask.templating.DispatchingJinjaLoader._iter_loaders']
debughelpers.explain_template_loading_attempts: ['debughelpers.explain_template_loading_attempts']
jinja2.TemplateNotFound: ['jinja2.TemplateNotFound']
flask.templating.DispatchingJinjaLoader.list_templates: ['<builtin>.list', '<builtin>.set', 'flask.templating.DispatchingJinjaLoader.list_templates']
flask.templating._render: ['signals.before_render_template.send', 'flask.templating._render', 'signals.template_rendered.send']
signals.before_render_template.send: ['signals.before_render_template.send']
signals.template_rendered.send: ['signals.template_rendered.send']
flask.templating.render_template: ['flask.templating.render_template', 'signals.before_render_template.send', 'flask.templating._render', 'signals.template_rendered.send', 'globals.current_app._get_current_object']
flask.templating.render_template_string: ['flask.templating.render_template_string', 'signals.before_render_template.send', 'flask.templating._render', 'signals.template_rendered.send', 'globals.current_app._get_current_object']
flask.templating._stream: ['flask.templating._stream', 'signals.before_render_template.send', 'flask.templating._stream.generate', 'helpers.stream_with_context', 'signals.template_rendered.send']
flask.templating._stream.generate: ['flask.templating._stream.generate', 'signals.template_rendered.send']
helpers.stream_with_context: ['helpers.stream_with_context']
flask.templating.stream_template: ['flask.templating._stream', 'flask.templating.stream_template', 'signals.before_render_template.send', 'flask.templating._stream.generate', 'helpers.stream_with_context', 'signals.template_rendered.send', 'globals.current_app._get_current_object']
flask.templating.stream_template_string: ['flask.templating._stream', 'signals.before_render_template.send', 'flask.templating._stream.generate', 'helpers.stream_with_context', 'signals.template_rendered.send', 'flask.templating.stream_template_string', 'globals.current_app._get_current_object']
flask.sansio.app: ['typing.TypeVar', 'flask.sansio.app']
flask.sansio.app._make_timedelta: ['flask.sansio.app._make_timedelta', 'datetime.timedelta', '<builtin>.isinstance']
flask.sansio.app.App.__init__: ['flask.sansio.app.App.__init__', 'os.path.isabs', 'helpers.get_debug_flag', 'config.Config', '<builtin>.dict', 'werkzeug.routing.Map', 'scaffold.Scaffold.json_provider_class', 'flask.sansio.app.App.make_aborter', 'flask.sansio.app.App.make_config', '<builtin>.ValueError', 'flask.sansio.app.App.auto_find_instance_path', 'scaffold.find_package', '<builtin>.super', 'os.path.join', 'werkzeug.exceptions.Aborter']
flask.sansio.app.App.auto_find_instance_path: ['os.path.join', 'flask.sansio.app.App.auto_find_instance_path', 'scaffold.find_package']
os.path.isabs: ['os.path.isabs']
flask.sansio.app.App.make_config: ['config.Config', 'flask.sansio.app.App.make_config', '<builtin>.dict', 'helpers.get_debug_flag']
flask.sansio.app.App.make_aborter: ['werkzeug.exceptions.Aborter', 'flask.sansio.app.App.make_aborter']
scaffold.Scaffold.json_provider_class: ['scaffold.Scaffold.json_provider_class']
werkzeug.routing.Map: ['werkzeug.routing.Map']
flask.sansio.app.App._check_setup_finished: ['<builtin>.AssertionError', 'flask.sansio.app.App._check_setup_finished']
flask.sansio.app.App: ['flask.sansio.app.App', 'werkzeug.utils.cached_property', 'scaffold.setupmethod']
flask.sansio.app.App.name: ['flask.sansio.app.App.name', 'os.path.basename', '<builtin>.getattr', 'os.path.splitext']
flask.sansio.app.App.logger: ['logging.create_logger', 'flask.sansio.app.App.logger']
logging.create_logger: ['logging.create_logger']
flask.sansio.app.App.jinja_env: ['<builtin>.NotImplementedError', 'flask.sansio.app.App.create_jinja_environment', 'flask.sansio.app.App.jinja_env']
flask.sansio.app.App.create_jinja_environment: ['<builtin>.NotImplementedError', 'flask.sansio.app.App.create_jinja_environment']
<builtin>.NotImplementedError: ['<builtin>.NotImplementedError']
config.Config: ['config.Config']
werkzeug.exceptions.Aborter: ['werkzeug.exceptions.Aborter']
scaffold.find_package: ['scaffold.find_package']
flask.sansio.app.App.create_global_jinja_loader: ['templating.DispatchingJinjaLoader', 'flask.sansio.app.App.create_global_jinja_loader']
templating.DispatchingJinjaLoader: ['templating.DispatchingJinjaLoader']
flask.sansio.app.App.select_jinja_autoescape: ['flask.sansio.app.App.select_jinja_autoescape']
flask.sansio.app.App.debug: ['flask.sansio.app.App.debug']
flask.sansio.app.App.register_blueprint: ['flask.sansio.app.App.register_blueprint']
flask.sansio.app.App.iter_blueprints: ['flask.sansio.app.App.iter_blueprints', 'scaffold.Scaffold.blueprints.values']
scaffold.Scaffold.blueprints.values: ['scaffold.Scaffold.blueprints.values']
flask.sansio.app.App.add_url_rule: ['<builtin>.set', '<builtin>.TypeError', '<builtin>.getattr', 'flask.sansio.app.App.add_url_rule', 'scaffold.Scaffold.view_functions.get', '<builtin>.isinstance', '<builtin>.AssertionError', 'scaffold._endpoint_from_view_func', 'werkzeug.routing.Rule']
werkzeug.routing.Rule: ['werkzeug.routing.Rule']
scaffold.Scaffold.view_functions.get: ['scaffold.Scaffold.view_functions.get']
flask.sansio.app.App.template_filter: ['flask.sansio.app.App.template_filter']
flask.sansio.app.App.template_filter.decorator: ['flask.sansio.app.App.add_template_filter', 'flask.sansio.app.App.template_filter.decorator']
flask.sansio.app.App.add_template_filter: ['flask.sansio.app.App.add_template_filter']
flask.sansio.app.App.template_test: ['flask.sansio.app.App.template_test']
flask.sansio.app.App.template_test.decorator: ['flask.sansio.app.App.template_test.decorator', 'flask.sansio.app.App.add_template_test']
flask.sansio.app.App.add_template_test: ['flask.sansio.app.App.add_template_test']
flask.sansio.app.App.template_global: ['flask.sansio.app.App.template_global']
flask.sansio.app.App.template_global.decorator: ['flask.sansio.app.App.template_global.decorator', 'flask.sansio.app.App.add_template_global']
flask.sansio.app.App.add_template_global: ['flask.sansio.app.App.add_template_global']
flask.sansio.app.App.teardown_appcontext: ['flask.sansio.app.App.teardown_appcontext', 'scaffold.Scaffold.teardown_appcontext_funcs.append']
scaffold.Scaffold.teardown_appcontext_funcs.append: ['scaffold.Scaffold.teardown_appcontext_funcs.append']
flask.sansio.app.App.shell_context_processor: ['scaffold.Scaffold.shell_context_processors.append', 'flask.sansio.app.App.shell_context_processor']
scaffold.Scaffold.shell_context_processors.append: ['scaffold.Scaffold.shell_context_processors.append']
flask.sansio.app.App._find_error_handler: ['flask.sansio.app.App._find_error_handler', '<builtin>.type', 'scaffold.Scaffold._get_exc_class_and_code']
scaffold.Scaffold._get_exc_class_and_code: ['scaffold.Scaffold._get_exc_class_and_code']
flask.sansio.app.App.trap_http_exception: ['flask.sansio.app.App.trap_http_exception', '<builtin>.isinstance']
flask.sansio.app.App.should_ignore_error: ['flask.sansio.app.App.should_ignore_error']
flask.sansio.app.App.redirect: ['flask.sansio.app.App.redirect', 'werkzeug.utils.redirect']
flask.sansio.app.App.inject_url_defaults: ['itertools.chain', 'flask.sansio.app.App.inject_url_defaults', '<builtin>.reversed', 'helpers._split_blueprint_path']
flask.sansio.app.App.handle_url_build_error: ['sys.exc_info', 'flask.sansio.app.App.handle_url_build_error', 'scaffold.Scaffold.url_build_error_handlers']
scaffold.Scaffold.url_build_error_handlers: ['scaffold.Scaffold.url_build_error_handlers']
flask.config: ['typing.TypeVar', 'flask.config']
flask.config.ConfigAttribute.__init__: ['flask.config.ConfigAttribute.__init__']
flask.config.ConfigAttribute: ['typing.overload', 'flask.config.ConfigAttribute']
flask.config.ConfigAttribute.__get__: ['flask.config.ConfigAttribute.__get__']
flask.config.ConfigAttribute.__set__: ['flask.config.ConfigAttribute.__set__']
flask.config.Config.__init__: ['flask.config.Config.__init__', '<builtin>.super']
flask.config.Config.from_envvar: ['os.path.join', 'flask.config.Config.from_object', '<builtin>.exec', '<builtin>.getattr', '<builtin>.open', 'werkzeug.utils.import_string', '<builtin>.dir', '<builtin>.isinstance', '<builtin>.RuntimeError', 'flask.config.Config.from_pyfile', 'flask.config.Config.from_envvar', '<builtin>.compile', 'os.environ.get', 'types.ModuleType']
flask.config.Config.from_pyfile: ['os.path.join', 'flask.config.Config.from_object', '<builtin>.exec', '<builtin>.getattr', '<builtin>.open', 'werkzeug.utils.import_string', '<builtin>.isinstance', 'flask.config.Config.from_pyfile', '<builtin>.compile', '<builtin>.dir', 'types.ModuleType']
flask.config.Config.from_prefixed_env: ['flask.config.Config.from_prefixed_env', '<builtin>.len', '<builtin>.sorted']
types.ModuleType: ['types.ModuleType']
<builtin>.exec: ['<builtin>.exec']
flask.config.Config.from_object: ['flask.config.Config.from_object', '<builtin>.getattr', 'werkzeug.utils.import_string', '<builtin>.isinstance', '<builtin>.dir']
<builtin>.dir: ['<builtin>.dir']
flask.config.Config.from_file: ['flask.config.Config.from_mapping', 'os.path.join', 'flask.config.Config.from_file', '<builtin>.open']
flask.config.Config.from_mapping: ['flask.config.Config.from_mapping']
flask.config.Config.get_namespace: ['flask.config.Config.get_namespace', '<builtin>.len']
flask.config.Config.__repr__: ['flask.config.Config.__repr__', '<builtin>.type']
flask.ctx: ['<builtin>.object', 'typing.TypeVar', 'flask.ctx']
flask.ctx._AppCtxGlobals.__getattr__: ['flask.ctx._AppCtxGlobals.__getattr__', '<builtin>.AttributeError']
flask.ctx._AppCtxGlobals.__setattr__: ['flask.ctx._AppCtxGlobals.__setattr__']
flask.ctx._AppCtxGlobals.__delattr__: ['flask.ctx._AppCtxGlobals.__delattr__', '<builtin>.AttributeError']
flask.ctx._AppCtxGlobals.get: ['flask.ctx._AppCtxGlobals.get']
flask.ctx._AppCtxGlobals.pop: ['flask.ctx._AppCtxGlobals.pop']
flask.ctx._AppCtxGlobals.setdefault: ['flask.ctx._AppCtxGlobals.setdefault']
flask.ctx._AppCtxGlobals.__contains__: ['flask.ctx._AppCtxGlobals.__contains__']
flask.ctx._AppCtxGlobals.__iter__: ['<builtin>.iter', 'flask.ctx._AppCtxGlobals.__iter__']
flask.ctx._AppCtxGlobals.__repr__: ['flask.ctx._AppCtxGlobals.__repr__', 'globals._cv_app.get']
flask.ctx.after_this_request: ['flask.ctx.after_this_request', 'globals._cv_request.get', '<builtin>.RuntimeError']
flask.ctx.copy_current_request_context: ['functools.update_wrapper', 'globals._cv_request.get', 'flask.ctx.copy_current_request_context', '<builtin>.RuntimeError']
flask.ctx.copy_current_request_context.wrapper: ['flask.ctx.copy_current_request_context.wrapper']
flask.ctx.has_request_context: ['flask.ctx.has_request_context', 'globals._cv_request.get']
flask.ctx.has_app_context: ['globals._cv_app.get', 'flask.ctx.has_app_context']
flask.ctx.AppContext.__init__: ['flask.ctx.AppContext.__init__']
flask.ctx.AppContext.push: ['flask.ctx.AppContext.push', 'globals._cv_app.set', 'signals.appcontext_pushed.send']
globals._cv_app.set: ['globals._cv_app.set']
signals.appcontext_pushed.send: ['signals.appcontext_pushed.send']
flask.ctx.AppContext.pop: ['signals.appcontext_popped.send', 'globals._cv_app.get', 'sys.exc_info', 'flask.ctx.AppContext.pop', '<builtin>.AssertionError', '<builtin>.len', 'globals._cv_app.reset']
globals._cv_app.reset: ['globals._cv_app.reset']
signals.appcontext_popped.send: ['signals.appcontext_popped.send']
flask.ctx.AppContext.__enter__: ['flask.ctx.AppContext.push', 'flask.ctx.AppContext.__enter__', 'signals.appcontext_pushed.send', 'globals._cv_app.set']
flask.ctx.AppContext.__exit__: ['signals.appcontext_popped.send', 'globals._cv_app.get', 'sys.exc_info', 'flask.ctx.AppContext.pop', '<builtin>.AssertionError', 'flask.ctx.AppContext.__exit__', '<builtin>.len', 'globals._cv_app.reset']
flask.ctx.RequestContext.__init__: ['flask.ctx.RequestContext.__init__']
flask.ctx.RequestContext.copy: ['flask.ctx.RequestContext.copy']
flask.ctx.RequestContext.match_request: ['flask.ctx.RequestContext.match_request']
flask.ctx.RequestContext.push: ['globals._cv_request.set', 'flask.ctx.RequestContext.match_request', 'globals._cv_app.get', 'flask.ctx.RequestContext.push']
globals._cv_request.set: ['globals._cv_request.set']
flask.ctx.RequestContext.pop: ['flask.ctx.RequestContext.pop', '<builtin>.getattr', 'sys.exc_info', 'globals._cv_request.reset', 'globals._cv_request.get', '<builtin>.AssertionError', '<builtin>.len']
globals._cv_request.reset: ['globals._cv_request.reset']
flask.ctx.RequestContext.__enter__: ['flask.ctx.RequestContext.__enter__', 'flask.ctx.RequestContext.match_request', 'globals._cv_app.get', 'globals._cv_request.set', 'flask.ctx.RequestContext.push']
flask.ctx.RequestContext.__exit__: ['flask.ctx.RequestContext.pop', '<builtin>.getattr', 'sys.exc_info', 'globals._cv_request.reset', 'globals._cv_request.get', '<builtin>.AssertionError', 'flask.ctx.RequestContext.__exit__', '<builtin>.len']
flask.ctx.RequestContext.__repr__: ['<builtin>.type', 'flask.ctx.RequestContext.__repr__']
flask.sessions: ['json.tag.TaggedJSONSerializer', 'flask.sessions']
flask.sessions.SessionMixin.permanent: ['<builtin>.bool', 'flask.sessions.SessionMixin.permanent', 'flask.sessions.SecureCookieSession.get', '<builtin>.super', 'collections.abc.MutableMapping.get']
flask.sessions.SecureCookieSession.get: ['flask.sessions.SecureCookieSession.get', '<builtin>.super']
collections.abc.MutableMapping.get: ['collections.abc.MutableMapping.get']
flask.sessions.SecureCookieSession.__init__: ['flask.sessions.SecureCookieSession.__init__', '<builtin>.super']
flask.sessions.SecureCookieSession.__init__.on_update: ['flask.sessions.SecureCookieSession.__init__.on_update']
flask.sessions.SecureCookieSession.__getitem__: ['<builtin>.super', 'flask.sessions.SecureCookieSession.__getitem__']
flask.sessions.SecureCookieSession.setdefault: ['<builtin>.super', 'flask.sessions.SecureCookieSession.setdefault']
flask.sessions.NullSession._fail: ['flask.sessions.NullSession._fail', '<builtin>.RuntimeError']
flask.sessions.SessionInterface.make_null_session: ['flask.sessions.SessionInterface.make_null_session', '<builtin>.super', 'flask.sessions.SecureCookieSession.__init__']
flask.sessions.SessionInterface.is_null_session: ['flask.sessions.SessionInterface.is_null_session', '<builtin>.isinstance']
flask.sessions.SessionInterface.get_cookie_name: ['flask.sessions.SessionInterface.get_cookie_name']
flask.sessions.SessionInterface.get_cookie_domain: ['flask.sessions.SessionInterface.get_cookie_domain']
flask.sessions.SessionInterface.get_cookie_path: ['flask.sessions.SessionInterface.get_cookie_path']
flask.sessions.SessionInterface.get_cookie_httponly: ['flask.sessions.SessionInterface.get_cookie_httponly']
flask.sessions.SessionInterface.get_cookie_secure: ['flask.sessions.SessionInterface.get_cookie_secure']
flask.sessions.SessionInterface.get_cookie_samesite: ['flask.sessions.SessionInterface.get_cookie_samesite']
flask.sessions.SessionInterface.get_expiration_time: ['datetime.datetime.now', 'flask.sessions.SessionInterface.get_expiration_time']
datetime.datetime.now: ['datetime.datetime.now']
flask.sessions.SessionInterface.should_set_cookie: ['flask.sessions.SessionInterface.should_set_cookie']
flask.sessions.SessionInterface.open_session: ['<builtin>.NotImplementedError', 'flask.sessions.SessionInterface.open_session']
flask.sessions.SessionInterface.save_session: ['<builtin>.NotImplementedError', 'flask.sessions.SessionInterface.save_session']
json.tag.TaggedJSONSerializer: ['json.tag.TaggedJSONSerializer']
flask.sessions._lazy_sha1: ['flask.sessions._lazy_sha1', 'hashlib.sha1']
hashlib.sha1: ['hashlib.sha1']
<builtin>.staticmethod: ['<builtin>.staticmethod']
flask.sessions.SecureCookieSessionInterface: ['flask.sessions.SecureCookieSessionInterface', '<builtin>.staticmethod']
flask.sessions.SecureCookieSessionInterface.get_signing_serializer: ['flask.sessions.SecureCookieSessionInterface.get_signing_serializer', '<builtin>.dict', 'itsdangerous.URLSafeTimedSerializer']
itsdangerous.URLSafeTimedSerializer: ['itsdangerous.URLSafeTimedSerializer']
flask.sessions.SecureCookieSessionInterface.open_session: ['flask.sessions.SecureCookieSessionInterface.open_session', 'flask.sessions.SecureCookieSessionInterface.get_signing_serializer', '<builtin>.dict', 'flask.sessions.SessionInterface.get_cookie_name', 'itsdangerous.URLSafeTimedSerializer', 'flask.sessions.SecureCookieSession.__init__', '<builtin>.super', '<builtin>.int']
flask.sessions.SecureCookieSessionInterface.save_session: ['flask.sessions.SessionInterface.get_cookie_secure', 'flask.sessions.SessionInterface.get_expiration_time', 'flask.sessions.SessionInterface.get_cookie_domain', 'datetime.datetime.now', 'flask.sessions.SessionInterface.get_cookie_path', 'flask.sessions.SecureCookieSessionInterface.get_signing_serializer', '<builtin>.dict', 'flask.sessions.SecureCookieSessionInterface.save_session', 'flask.sessions.SessionInterface.get_cookie_name', 'itsdangerous.URLSafeTimedSerializer', 'flask.sessions.SessionInterface.get_cookie_samesite', 'flask.sessions.SessionInterface.should_set_cookie', 'flask.sessions.SessionInterface.get_cookie_httponly']
flask.json.tag: ['flask.json.tag']
flask.json.tag.JSONTag.__init__: ['flask.json.tag.JSONTag.__init__']
flask.json.tag.JSONTag.check: ['flask.json.tag.JSONTag.check']
flask.json.tag.JSONTag.to_json: ['flask.json.tag.JSONTag.to_json']
flask.json.tag.JSONTag.to_python: ['flask.json.tag.JSONTag.to_python']
flask.json.tag.JSONTag.tag: ['flask.json.tag.JSONTag.tag', 'flask.json.tag.JSONTag.to_json']
flask.json.tag.TagDict.check: ['<builtin>.iter', 'flask.json.tag.TagDict.check', '<builtin>.isinstance', '<builtin>.len', '<builtin>.next']
flask.json.tag.TagDict.to_json: ['flask.json.tag.TagDict.to_json', '<builtin>.iter', '<builtin>.next']
flask.json.tag.TagDict.to_python: ['<builtin>.next', '<builtin>.iter', 'flask.json.tag.TagDict.to_python']
flask.json.tag.PassDict.check: ['flask.json.tag.PassDict.check', '<builtin>.isinstance']
flask.json.tag.PassDict.to_json: ['flask.json.tag.PassDict.to_json']
flask.json.tag.TagTuple.check: ['flask.json.tag.TagTuple.check', '<builtin>.isinstance']
flask.json.tag.TagTuple.to_json: ['flask.json.tag.TagTuple.to_json']
flask.json.tag.TagTuple.to_python: ['<builtin>.tuple', 'flask.json.tag.TagTuple.to_python']
<builtin>.tuple: ['<builtin>.tuple']
flask.json.tag.PassList.check: ['<builtin>.isinstance', 'flask.json.tag.PassList.check']
flask.json.tag.PassList.to_json: ['flask.json.tag.PassList.to_json']
flask.json.tag.TagBytes.check: ['<builtin>.isinstance', 'flask.json.tag.TagBytes.check']
flask.json.tag.TagBytes.to_json: ['flask.json.tag.TagBytes.to_json', 'base64.b64encode']
base64.b64encode: ['base64.b64encode']
flask.json.tag.TagBytes.to_python: ['flask.json.tag.TagBytes.to_python', 'base64.b64decode']
base64.b64decode: ['base64.b64decode']
flask.json.tag.TagMarkup.check: ['<builtin>.callable', 'flask.json.tag.TagMarkup.check', '<builtin>.getattr']
flask.json.tag.TagMarkup.to_json: ['flask.json.tag.TagMarkup.to_json', '<builtin>.str']
<builtin>.str: ['<builtin>.str']
flask.json.tag.TagMarkup.to_python: ['markupsafe.Markup', 'flask.json.tag.TagMarkup.to_python']
markupsafe.Markup: ['markupsafe.Markup']
flask.json.tag.TagUUID.check: ['<builtin>.isinstance', 'flask.json.tag.TagUUID.check']
flask.json.tag.TagUUID.to_json: ['flask.json.tag.TagUUID.to_json']
flask.json.tag.TagUUID.to_python: ['uuid.UUID', 'flask.json.tag.TagUUID.to_python']
uuid.UUID: ['uuid.UUID']
flask.json.tag.TagDateTime.check: ['<builtin>.isinstance', 'flask.json.tag.TagDateTime.check']
flask.json.tag.TagDateTime.to_json: ['werkzeug.http.http_date', 'flask.json.tag.TagDateTime.to_json']
werkzeug.http.http_date: ['werkzeug.http.http_date']
flask.json.tag.TagDateTime.to_python: ['werkzeug.http.parse_date', 'flask.json.tag.TagDateTime.to_python']
werkzeug.http.parse_date: ['werkzeug.http.parse_date']
flask.json.tag.TaggedJSONSerializer.__init__: ['flask.json.tag.TaggedJSONSerializer.__init__', 'flask.json.tag.TaggedJSONSerializer.register', '<builtin>.KeyError']
flask.json.tag.TaggedJSONSerializer.register: ['flask.json.tag.TaggedJSONSerializer.register', '<builtin>.KeyError']
<builtin>.KeyError: ['<builtin>.KeyError']
flask.json.tag.TaggedJSONSerializer.tag: ['flask.json.tag.TaggedJSONSerializer.tag']
flask.json.tag.TaggedJSONSerializer.untag: ['<builtin>.iter', '<builtin>.len', 'flask.json.tag.TaggedJSONSerializer.untag', '<builtin>.next']
flask.json.tag.TaggedJSONSerializer._untag_scan: ['flask.json.tag.TaggedJSONSerializer.untag', '<builtin>.iter', 'flask.json.tag.TaggedJSONSerializer._untag_scan', '<builtin>.isinstance', '<builtin>.len', '<builtin>.next']
flask.json.tag.TaggedJSONSerializer.dumps: ['flask.json.tag.TaggedJSONSerializer.dumps', 'flask.json.tag.TaggedJSONSerializer.tag']
flask.json.tag.TaggedJSONSerializer.loads: ['flask.json.tag.TaggedJSONSerializer.untag', 'flask.json.tag.TaggedJSONSerializer.loads', '<builtin>.iter', 'flask.json.tag.TaggedJSONSerializer._untag_scan', '<builtin>.isinstance', '<builtin>.len', '<builtin>.next']
flask.typing: ['typing.TypeVar', 'flask.typing']
flask.logging: ['werkzeug.local.LocalProxy', 'logging.Formatter', 'logging.StreamHandler', 'flask.logging']
flask.logging.wsgi_errors_stream: ['flask.logging.wsgi_errors_stream']
flask.logging.has_level_handler: ['flask.logging.has_level_handler', '<builtin>.any']
logging.StreamHandler: ['logging.StreamHandler']
logging.Formatter: ['logging.Formatter']
flask.logging.create_logger: ['logging.getLogger', 'flask.logging.create_logger', 'flask.logging.has_level_handler', '<builtin>.any']
logging.getLogger: ['logging.getLogger']
flask.testing: ['flask.testing']
flask.testing.EnvironBuilder.__init__: ['<builtin>.bool', 'flask.testing.EnvironBuilder.__init__', 'urllib.parse.urlsplit', '<builtin>.isinstance', 'werkzeug.test.Client.application.config.get', '<builtin>.super']
werkzeug.test.Client.application.config.get: ['werkzeug.test.Client.application.config.get']
urllib.parse.urlsplit: ['urllib.parse.urlsplit']
flask.testing.EnvironBuilder.json_dumps: ['werkzeug.test.Client.application.json.dumps', 'flask.testing.EnvironBuilder.json_dumps']
werkzeug.test.Client.application.json.dumps: ['werkzeug.test.Client.application.json.dumps']
flask.testing._get_werkzeug_version: ['flask.testing._get_werkzeug_version']
flask.testing.FlaskClient.__init__: ['flask.testing.FlaskClient.__init__', '<builtin>.super', 'flask.testing._get_werkzeug_version', 'contextlib.ExitStack']
contextlib.ExitStack: ['contextlib.ExitStack']
flask.testing.FlaskClient: ['contextlib.contextmanager', 'flask.testing.FlaskClient']
contextlib.contextmanager: ['contextlib.contextmanager']
flask.testing.FlaskClient.session_transaction: ['werkzeug.test.Client.application.session_interface.save_session', 'werkzeug.test.Client.application.session_interface.is_null_session', '<builtin>.TypeError', 'werkzeug.test.Client._add_cookies_to_wsgi', 'werkzeug.test.Client.application.test_request_context', 'werkzeug.test.Client._update_cookies_from_response', '<builtin>.RuntimeError', 'flask.testing.FlaskClient.session_transaction', 'werkzeug.test.Client.application.response_class', 'werkzeug.test.Client.application.session_interface.open_session']
werkzeug.test.Client.application.test_request_context: ['werkzeug.test.Client.application.test_request_context']
werkzeug.test.Client._add_cookies_to_wsgi: ['werkzeug.test.Client._add_cookies_to_wsgi']
werkzeug.test.Client.application.session_interface.open_session: ['werkzeug.test.Client.application.session_interface.open_session']
werkzeug.test.Client.application.response_class: ['werkzeug.test.Client.application.response_class']
werkzeug.test.Client.application.session_interface.is_null_session: ['werkzeug.test.Client.application.session_interface.is_null_session']
werkzeug.test.Client.application.session_interface.save_session: ['werkzeug.test.Client.application.session_interface.save_session']
werkzeug.test.Client._update_cookies_from_response: ['werkzeug.test.Client._update_cookies_from_response']
flask.testing.FlaskClient._copy_environ: ['flask.testing.FlaskClient._copy_environ']
flask.testing.FlaskClient._request_from_builder_args: ['<builtin>.bool', 'flask.testing.EnvironBuilder.__init__', 'urllib.parse.urlsplit', 'flask.testing.FlaskClient._request_from_builder_args', '<builtin>.isinstance', 'werkzeug.test.Client.application.config.get', 'flask.testing.FlaskClient._copy_environ', '<builtin>.super']
flask.testing.FlaskClient.open: ['flask.testing.FlaskClient.open', 'werkzeug.test.Client._new_contexts.pop', 'flask.testing.EnvironBuilder.__init__', 'copy.copy', '<builtin>.bool', 'urllib.parse.urlsplit', 'flask.testing.FlaskClient._request_from_builder_args', '<builtin>.isinstance', 'werkzeug.test.Client.application.config.get', 'flask.testing.FlaskClient._copy_environ', '<builtin>.super']
copy.copy: ['copy.copy']
werkzeug.test.Client._new_contexts.pop: ['werkzeug.test.Client._new_contexts.pop']
flask.testing.FlaskClient.__enter__: ['flask.testing.FlaskClient.__enter__', '<builtin>.RuntimeError']
flask.testing.FlaskClient.__exit__: ['flask.testing.FlaskClient.__exit__']
flask.testing.FlaskCliRunner.__init__: ['<builtin>.super', 'flask.testing.FlaskCliRunner.__init__']
flask.testing.FlaskCliRunner.invoke: ['<builtin>.super', 'flask.testing.FlaskCliRunner.invoke', 'cli.ScriptInfo']
flask.testing.FlaskCliRunner.invoke.<lambda1>: ['flask.testing.FlaskCliRunner.invoke.<lambda1>']
cli.ScriptInfo: ['cli.ScriptInfo']
flask.json.provider: ['flask.json.provider']
flask.json.provider.JSONProvider.__init__: ['flask.json.provider.JSONProvider.__init__', 'weakref.proxy']
weakref.proxy: ['weakref.proxy']
flask.json.provider.JSONProvider.dumps: ['flask.json.provider.JSONProvider.dumps']
flask.json.provider.JSONProvider.dump: ['flask.json.provider.JSONProvider.dumps', 'flask.json.provider.JSONProvider.dump']
flask.json.provider.JSONProvider.loads: ['flask.json.provider.JSONProvider.loads']
flask.json.provider.JSONProvider.load: ['flask.json.provider.JSONProvider.load', 'flask.json.provider.JSONProvider.loads']
flask.json.provider.JSONProvider._prepare_response_obj: ['<builtin>.TypeError', '<builtin>.len', 'flask.json.provider.JSONProvider._prepare_response_obj']
flask.json.provider.JSONProvider.response: ['flask.json.provider.JSONProvider.dumps', '<builtin>.TypeError', 'flask.json.provider.JSONProvider._prepare_response_obj', '<builtin>.len', 'flask.json.provider.JSONProvider.response']
flask.json.provider._default: ['dataclasses.is_dataclass', '<builtin>.TypeError', '<builtin>.hasattr', '<builtin>.type', 'dataclasses.asdict', '<builtin>.str', '<builtin>.isinstance', 'flask.json.provider._default', 'werkzeug.http.http_date']
dataclasses.is_dataclass: ['dataclasses.is_dataclass']
dataclasses.asdict: ['dataclasses.asdict']
flask.json.provider.DefaultJSONProvider: ['flask.json.provider.DefaultJSONProvider', '<builtin>.staticmethod']
flask.json.provider.DefaultJSONProvider.dumps: ['json.dumps', 'flask.json.provider.DefaultJSONProvider.dumps']
flask.json.provider.DefaultJSONProvider.loads: ['json.loads', 'flask.json.provider.DefaultJSONProvider.loads']
flask.json.provider.DefaultJSONProvider.response: ['json.dumps', '<builtin>.TypeError', 'flask.json.provider.DefaultJSONProvider.response', 'flask.json.provider.JSONProvider._prepare_response_obj', 'flask.json.provider.DefaultJSONProvider.dumps', '<builtin>.len']
