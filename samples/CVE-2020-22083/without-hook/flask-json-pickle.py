from flask import Flask, request, render_template, current_app, redirect
from flask_bootstrap import Bootstrap

import jsonpickle
import pickle
import base64


import sys

def hook(evt, arg):
    if evt in ["sys._getframe", "object.__getattr__", "object.__setattr__"]:
        return
    frame = sys._getframe(0)
    f = frame.f_code.co_filename
    
    while frame:
        if frame.f_back is None:
            break
        else:
            frame = frame.f_back
        
        func_name = frame.f_code.co_name
        if frame.f_code.co_filename == f:

            if func_name == "index":
                if evt not in ['open', 'compile', 'sys._getframe', 'marshal.loads', 'import', 'exec', 'builtins.id']:
                    raise RuntimeError('Event not allowed')

            if func_name == "whoami":
                if evt not in ['open', 'compile', 'sys._getframe', 'marshal.loads', 'import', 'exec', 'builtins.id']:
                    raise RuntimeError('Event not allowed')

# sys.addaudithook(hook)

app = Flask(__name__)
Bootstrap(app)


class User(object):

    def __init__(self, username):
        self.username = username


@app.route('/')
def index():
    if request.cookies.get("username"):
        u = jsonpickle.decode(base64.b64decode(request.cookies.get("username")).decode('utf-8'))
        if "username" in dir(u):
            username=u.username
        else:
            username="Attacker"
        return render_template("index.html", username=username)
    else:
        w = redirect("/whoami")
        response = current_app.make_response(w)
        u = User("Guest")
        encoded = base64.b64encode(jsonpickle.encode(u).encode('utf-8')).decode('utf-8')
        response.set_cookie("username", value=encoded)
        return response


@app.route('/whoami')
def whoami():
    user = jsonpickle.decode(base64.b64decode(request.cookies.get("username")).decode('utf-8'))
    username = user.username
    return render_template("whoami.html", username=username)


if __name__ == '__main__':
    app.debug = True
    app.run(host="0.0.0.0", port=5000)
